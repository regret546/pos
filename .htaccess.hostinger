# Sample .htaccess for Hostinger production
# Copy this to your Hostinger public_html/.htaccess and update the DB values

DirectoryIndex index.php

# Environment variables for production (UPDATE THESE VALUES)
<IfModule mod_env.c>
    SetEnv DB_HOST "localhost"
    SetEnv DB_NAME "your_hostinger_db_name"
    SetEnv DB_USER "your_hostinger_db_user"
    SetEnv DB_PASS "your_hostinger_db_password"
    SetEnv APP_ENV "production"
</IfModule>

# Enable URL rewriting
<IfModule mod_rewrite.c>
    RewriteEngine On
    RewriteBase /
    
    # Fallback env vars (if SetEnv doesn't work)
    # Uncomment and update these if the SetEnv above doesn't work
    # RewriteRule ^ - [E=DB_HOST:localhost,E=DB_NAME:your_db_name,E=DB_USER:your_db_user,E=DB_PASS:your_db_pass,E=APP_ENV:production]
    
    # If the request is not for a file
    RewriteCond %{REQUEST_FILENAME} !-f
    # If the request is not for a directory
    RewriteCond %{REQUEST_FILENAME} !-d
    # Route everything through index.php
    RewriteRule ^(.*)$ index.php?route=$1 [QSA,L]
</IfModule>

# Fallback if mod_rewrite is not available
<IfModule !mod_rewrite.c>
    # Redirect all requests to index.php
    FallbackResource /index.php
</IfModule>

# Prevent directory listing
Options -Indexes

# PHP settings
<IfModule mod_php7.c>
    php_flag display_errors off
</IfModule>

# Security headers
<IfModule mod_headers.c>
    Header set X-Content-Type-Options "nosniff"
    Header set X-XSS-Protection "1; mode=block"
    Header set X-Frame-Options "SAMEORIGIN"
</IfModule>
